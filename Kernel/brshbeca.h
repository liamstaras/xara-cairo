/*
 * xara-cairo, a vector drawing program
 *
 * Based on Xara LX, Copyright (C) 1993-2006 Xara Group Ltd.
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation, version 2.
 *
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * for more details.
 */


// BrushBecomeA class header

#ifndef INC_BRSHBEC
#define INC_BRSHBEC


class Node;
class CCAttrMap;
class BlendPath;
class BecomeA;
class NodeGroup;
class BlendRef;

/***********************************************************************************************

>	class HandleBrushBecomeA: public CC_CLASS_MEMDUMP

	Author:		Diccon_Yamanaka (Xara Group Ltd) <camelotdev@xara.com>
	Created:	25/2/2000
	Purpose:	This class of object is used to store the paths and attribute maps generated for 
				each individual brush object generated by a brushed ink node.  It can either 
				turn these paths into nodepaths for insertion into the tree of pass them back for 
				whatever salicious reason.

***********************************************************************************************/


class HandleBrushBecomeA : public CC_CLASS_MEMDUMP
{
CC_DECLARE_MEMDUMP(HandleBrushBecomeA);

public:
	HandleBrushBecomeA();
	virtual ~HandleBrushBecomeA();

	BOOL Initialise(BecomeA* pBecomeA, Node* pContextNode, Node* pCreatedBy);
public:
	BOOL Passback(Path* pPath, CCAttrMap* pAttrMap, UINT32 Step);
	BOOL HideContextNode();
	BOOL HideCreatedByNode();
	BOOL FinishPassback();
	void SetNumBlendPaths(UINT32 NumPaths) {m_NumBlendPaths = (INT32)NumPaths;}
	BOOL MakeGroupForThisStep() {return m_NumBlendPaths > 1;}

	virtual BOOL IsSecondary() const {return m_bSecondary;}
	virtual void SetSecondary(BOOL bNewValue = TRUE) {m_bSecondary = bNewValue;}

protected:  //DATA
	BecomeA*   m_pBecomeA;
	Node*	   m_pContextNode;
	Node*	   m_pCreatedByNode;
	NodeGroup* m_pNodeGroup;
	UINT32	   m_NumBlendPaths;
	INT32	   m_LastStep;
	BOOL	   m_bFirst;
	BOOL		m_bSecondary;
};


/***********************************************************************************************

>	class BrushBecomeA: public BecomeA

	Author:		Diccon_Yamanaka (Xara Group Ltd) <camelotdev@xara.com>
	Created:	25/2/2000
	Purpose:	This class is passed to inknodes when we wish to turn them into blendpaths that
				we can use to make brushes.  This is essentially a simplified version of BlendBecomeA

***********************************************************************************************/

class BrushBecomeA : public BecomeA
{
	CC_DECLARE_MEMDUMP(BrushBecomeA)

public:
	BrushBecomeA(	BecomeAReason Reason,
					CCRuntimeClass* pClass, 
					UndoableOperation* pOp, 
					BlendRef* pThisBlendRef 
					);

	// This function should be called when Reason == BECOMEA_PASSBACK 
	virtual BOOL PassBack(NodeRenderableInk* pNewNode,NodeRenderableInk* pCreatedByNode,CCAttrMap* pAttrMap);


protected:
	BlendRef* m_pBlendRef;

};


/***********************************************************************************************

>	class SimpleBecomeA : public BecomeA

	Author:		Diccon_Yamanaka (Xara Group Ltd) <camelotdev@xara.com>
	Created:	25/2/2000
	Purpose:	A simple becomeA object that retrieves paths from nodes and makes them available
				to you, the user without messing around with MakeNodePathFromAttributes or any of
				that rubbish

***********************************************************************************************/

class SimpleBecomeA : public BecomeA
{
	CC_DECLARE_MEMDUMP(SimpleBecomeA)

public:
	SimpleBecomeA(	BecomeAReason Reason,
					CCRuntimeClass* pClass, 
					UndoableOperation* pOp
					);

	// This function should be called when Reason == BECOMEA_PASSBACK 
	virtual BOOL PassBack(NodeRenderableInk* pNewNode,NodeRenderableInk* pCreatedByNode,CCAttrMap* pAttrMap);

	NodePath* GetNodePath();
protected:
	NodePath* m_pNodePath;


};




/***********************************************************************************************

>	class BrushBecomeAGroup : public BecomeA

	Author:		Diccon_Yamanaka (Xara Group Ltd) <camelotdev@xara.com>
	Created:	25/2/2000
	Purpose:	Theres no real facility for extracting the brush objects and passing them back, 
				however this provides some sort of workaround, as it will store all the brush objects
				in a group.

***********************************************************************************************/

class BrushBecomeAGroup : public BecomeA
{
	CC_DECLARE_MEMDUMP(BrushBecomeAGroup)

public:
	BrushBecomeAGroup(	BecomeAReason Reason,
					CCRuntimeClass* pClass, 
					UndoableOperation* pOp
					);
	~BrushBecomeAGroup();

	// This function should be called when Reason == BECOMEA_PASSBACK 
	virtual BOOL PassBack(NodeRenderableInk* pNewNode,NodeRenderableInk* pCreatedByNode,CCAttrMap* pAttrMap);
	
	virtual BOOL IsBrushBecomeAGroup() { return TRUE;}

	NodeGroup* GetNodeGroup();
protected:
	NodeGroup* m_pNodeGroup;


};


#endif	
